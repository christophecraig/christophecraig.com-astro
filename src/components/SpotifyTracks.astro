---
interface Track {
  id: string;
  name: string;
  artists: string[];
  album: {
    name: string;
    images: { url: string; width: number; height: number }[];
  };
  external_urls: { spotify: string };
}

let topTracks: Track[] = [];
let recentlyPlayed: Track[] = [];

try {
  // Fetch top tracks
  const topTracksResponse = await fetch('/api/top-tracks');
  if (topTracksResponse.ok) {
    const data = await topTracksResponse.json();
    topTracks = data.tracks || [];
  }

  // Fetch recently played tracks
  const recentlyPlayedResponse = await fetch('/api/recently-played');
  if (recentlyPlayedResponse.ok) {
    const data = await recentlyPlayedResponse.json();
    recentlyPlayed = data.tracks || [];
  }
} catch (error) {
  console.error('Error fetching Spotify data:', error);
}
---

<div class="spotify-section">
  <h2>Music I'm Into</h2>
  
  <div class="spotify-content">
    {topTracks.length > 0 && (
      <div class="spotify-category">
        <h3>My Top Tracks</h3>
        <ul class="spotify-list">
          {topTracks.map((track) => (
            <li class="spotify-item">
              <a href={track.external_urls.spotify} target="_blank" rel="noopener noreferrer" class="spotify-link">
                {track.album.images && track.album.images[0] && (
                  <img 
                    src={track.album.images[0].url} 
                    alt={track.name} 
                    width="50" 
                    height="50" 
                    class="spotify-image" 
                    loading="lazy"
                  />
                )}
                <span class="spotify-text">
                  <strong>{track.name}</strong>
                  <span class="spotify-artist">{track.artists.join(', ')}</span>
                </span>
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}

    {recentlyPlayed.length > 0 && (
      <div class="spotify-category">
        <h3>Recently Played</h3>
        <ul class="spotify-list">
          {recentlyPlayed.map((track) => (
            <li class="spotify-item">
              <a href={track.external_urls.spotify} target="_blank" rel="noopener noreferrer" class="spotify-link">
                {track.album.images && track.album.images[0] && (
                  <img 
                    src={track.album.images[0].url} 
                    alt={track.name} 
                    width="50" 
                    height="50" 
                    class="spotify-image" 
                    loading="lazy"
                  />
                )}
                <span class="spotify-text">
                  <strong>{track.name}</strong>
                  <span class="spotify-artist">{track.artists.join(', ')}</span>
                </span>
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}

    {topTracks.length === 0 && recentlyPlayed.length === 0 && (
      <p class="spotify-empty">Check out some great music on Spotify!</p>
    )}
  </div>
</div>

<style>
  .spotify-section {
    margin: 2rem 0;
    padding: 1.5rem;
    border-radius: 8px;
    background-color: #f8f9fa;
  }

  .spotify-section h2 {
    margin-top: 0;
    color: #1db954;
  }

  .spotify-content {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
  }

  .spotify-category {
    flex: 1;
    min-width: 300px;
  }

  .spotify-category h3 {
    margin-top: 0;
    color: #191414;
  }

  .spotify-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .spotify-item {
    margin-bottom: 1rem;
  }

  .spotify-link {
    display: flex;
    align-items: center;
    gap: 1rem;
    text-decoration: none;
    color: inherit;
    padding: 0.5rem;
    border-radius: 4px;
    transition: background-color 0.2s;
  }

  .spotify-link:hover {
    background-color: rgba(29, 185, 84, 0.1);
  }

  .spotify-image {
    border-radius: 4px;
    object-fit: cover;
  }

  .spotify-text {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .spotify-artist {
    font-size: 0.875rem;
    color: #666;
  }

  .spotify-empty {
    color: #666;
    font-style: italic;
  }

  @media (max-width: 768px) {
    .spotify-content {
      flex-direction: column;
    }
    
    .spotify-category {
      min-width: 100%;
    }
  }
</style>