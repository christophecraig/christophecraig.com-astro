---
import LanguageSwitcher from './LanguageSwitcher.astro';
import { getLocalizedPath } from '../i18n/utils';

interface Props {
  currentLang: 'en' | 'fr';
  path: string;
  t: any;
}

const { currentLang, path, t } = Astro.props;

// Generate localized paths for navigation
const homePath = getLocalizedPath('/', currentLang);
const aboutPath = getLocalizedPath('/about', currentLang);
const projectsPath = getLocalizedPath('/projects', currentLang);

// Helper function to check if a path is active
const isActive = (linkPath: string) => path === linkPath;
---

<header>
  <nav>
    <div class="nav-content">
      <h2><a href={homePath}>Christophe Craig</a></h2>
      
      <!-- Hamburger menu button for mobile -->
      <button 
        class="mobile-menu-toggle" 
        aria-label="Toggle navigation menu"
        id="mobile-menu-toggle"
      >
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
      
      <div class="nav-links" id="nav-links">
        <a 
          href={homePath} 
          class={isActive(homePath) ? 'active' : ''}
        >
          {t.home}
        </a>
        <a 
          href={aboutPath} 
          class={isActive(aboutPath) ? 'active' : ''}
        >
          {t.about}
        </a>
        <a 
          href={projectsPath} 
          class={isActive(projectsPath) ? 'active' : ''}
        >
          {t.projects}
        </a>
        <LanguageSwitcher {currentLang} {path} />
      </div>
    </div>
  </nav>
</header>

<script is:client>
  const toggleButton = document.getElementById('mobile-menu-toggle');
  const navLinks = document.getElementById('nav-links');
  
  if (toggleButton && navLinks) {
    toggleButton.addEventListener('click', () => {
      navLinks.classList.toggle('nav-links-open');
      
      // Update aria-expanded attribute for accessibility
      const isExpanded = navLinks.classList.contains('nav-links-open');
      toggleButton.setAttribute('aria-expanded', isExpanded.toString());
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', (event) => {
      if (!navLinks.contains(event.target) && !toggleButton.contains(event.target)) {
        navLinks.classList.remove('nav-links-open');
        toggleButton.setAttribute('aria-expanded', 'false');
      }
    });
    
    // Close menu when clicking on a link
    const navLinksItems = navLinks.querySelectorAll('a');
    navLinksItems.forEach(link => {
      link.addEventListener('click', () => {
        navLinks.classList.remove('nav-links-open');
        toggleButton.setAttribute('aria-expanded', 'false');
      });
    });
  }
</script>

<style>
  header {
    margin: 0;
    padding: 0;
    background: white;
    box-shadow: 0 2px 8px rgba(var(--black), 5%);
    position: sticky;
    top: 0;
    z-index: 100;
  }
  
  .nav-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 1.5rem;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  h2 {
    margin: 0;
    font-size: 1.25rem;
  }
  
  h2 a,
  h2 a.active {
    text-decoration: none;
    color: var(--accent-dark);
    font-weight: 700;
  }
  
  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    z-index: 101;
  }
  
  .hamburger-line {
    width: 24px;
    height: 2px;
    background-color: var(--accent-dark);
    margin: 3px 0;
    transition: 0.3s;
  }
  
  .nav-links {
    display: flex;
    gap: 1.5rem;
    align-items: center;
  }
  
  .nav-links a {
    padding: 0.5rem 0;
    color: rgb(var(--gray-dark));
    border-bottom: 2px solid transparent;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.2s ease;
  }
  
  .nav-links a:hover,
  .nav-links a.active {
    color: var(--accent);
    border-bottom-color: var(--accent);
  }
  
  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: flex;
    }
    
    .nav-links {
      position: fixed;
      top: 0;
      right: -100%;
      width: 70%;
      height: 100vh;
      background: white;
      flex-direction: column;
      justify-content: flex-start;
      padding: 6rem 2rem 2rem;
      gap: 1.5rem;
      transition: right 0.3s ease;
      box-shadow: -2px 0 10px rgba(var(--black), 10%);
      z-index: 100;
    }
    
    .nav-links-open {
      right: 0;
    }
    
    .nav-content {
      padding: 1rem;
    }
    
    h2 {
      font-size: 1.1rem;
    }
    
    .nav-links a {
      font-size: 1.1rem;
      padding: 0.5rem 0;
      width: 100%;
      text-align: left;
    }
  }
  
  @media (max-width: 480px) {
    .nav-links {
      width: 85%;
    }
    
    .nav-content {
      padding: 0.75rem;
    }
  }
</style>